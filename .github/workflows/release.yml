name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'refs/tags/v*' # para disparar o release pela tag de vers√£o
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: ['8.0', '9.0']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '${{ matrix.dotnet }}.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        dotnet: ['8.0', '9.0']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '${{ matrix.dotnet }}.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests
        run: dotnet test --configuration Release --verbosity normal

  version_and_changelog:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK 9.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install GitVersion tool
        run: dotnet tool install --global GitVersion.Tool

      - name: Get version info
        id: gitversion
        run: gitversion /output json /showvariable SemVer
        env:
          DOTNET_NOLOGO: true

      - name: Generate changelog
        run: |
          curl -sSL https://github.com/git-chglog/git-chglog/releases/latest/download/git-chglog_linux_amd64.tar.gz | tar -xz -C /usr/local/bin
          git-chglog -o CHANGELOG.md -p .
          git diff --quiet || (git add CHANGELOG.md && git commit -m "chore: update changelog")

      - name: Show Version
        run: echo "Version = ${{ steps.gitversion.outputs.SemVer }}"

  publish:
    runs-on: ubuntu-latest
    needs: version_and_changelog
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK 9.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build package
        run: dotnet pack --configuration Release --no-build --output ./nupkg

      - name: Publish to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
