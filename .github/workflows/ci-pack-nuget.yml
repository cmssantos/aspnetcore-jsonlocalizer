name: CI Pack NuGet

on:
  push:
    branches:
      - main

jobs:
  build-test-pack:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal

      # [Passos para versionamento, pack, etc]

      - name: Pack NuGet package
        run: dotnet pack --configuration Release --no-build --output ./artifacts

      - name: Generate changelog
        run: |
          echo "Release v${{ steps.version.outputs.new_version }}" > changelog.txt
          git log -1 --pretty=format:"- %s" >> changelog.txt

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ steps.version.outputs.new_version }} || echo "Tag already exists"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} v${{ steps.version.outputs.new_version }} || echo "Tag push failed, maybe already exists"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          release_name: Release v${{ steps.version.outputs.new_version }}
          body_path: changelog.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload NuGet package
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/mypackage.${{ steps.version.outputs.new_version }}.nupkg
          asset_name: mypackage.v${{ steps.version.outputs.new_version }}.nupkg
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
